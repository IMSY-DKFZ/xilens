image: nvidia/cuda:12.2.0-devel-ubuntu22.04

stages:
  - build
  - test
  - pages

before_script:
  - export DEBIAN_FRONTEND=noninteractive
  - export TZ=Europe/Berlin
  - apt-get update && apt-get -y install tzdata
  - apt-get install -y build-essential sudo udev wget libcanberra-gtk-module libcanberra-gtk3-module cmake xvfb uuid-dev libgl1-mesa-dev git
  - chmod +x install_dependencies.sh
  - ./install_dependencies.sh

# This is the job to build the project
build:
  stage: build
  needs: []
  script:
    - mkdir cmake-build && cd cmake-build
    - cmake -D ENABLE_COVERAGE=ON ..
    - xvfb-run -a --server-args="-screen 0 1024x768x24" make all -j
    - xvfb-run -a --server-args="-screen 0 1024x768x24" make package -j
    - dpkg -i xilens*.deb
  artifacts:
    paths:
      - cmake-build/
  rules:
      - if: $CI_COMMIT_BRANCH == "develop" || $CI_PIPELINE_SOURCE == "merge_request_event"

test:
  stage: test
  variables:
    QT_QPA_PLATFORM: "offscreen"
  needs:
    - build
  script:
    - cd cmake-build
    - xvfb-run -a --server-args="-screen 0 1024x768x24" ctest --extra-verbose --output-on-failure --output-junit Testing/Test.xml --schedule-random -T Test --no-compress-output
    - gcovr --xml-pretty --print-summary -o coverage.xml --verbose -e '/.*cmake-build.*/.*' --root ${CI_PROJECT_DIR}
    - mv Testing/Test.xml ../report.xml
    - mv coverage.xml ../coverage.xml
  coverage: /^\s*lines:\s*\d+.\d+\%/
  artifacts:
    when: always
    reports:
      junit: report.xml
      coverage_report:
        coverage_format: cobertura
        path: coverage.xml
  rules:
      - if: $CI_COMMIT_BRANCH == "develop" || $CI_PIPELINE_SOURCE == "merge_request_event"

pages:
  needs:
    - test
    - build
  script:
    - apt install -y doxygen graphviz  python3 python3-pip
    - pip install -U sphinx furo breathe
    - cd docs
    - doxygen Doxyfile
    - make html SPHINXOPTS="-j4"
    - mv build/html/ ../public/
  artifacts:
    paths:
      - public
  rules:
    - if: $CI_COMMIT_BRANCH == "develop"
