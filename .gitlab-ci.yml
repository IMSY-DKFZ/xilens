image: nvidia/cuda:11.8.0-base-ubuntu22.04

stages:
  - build
  - test

before_script:
  - export DEBIAN_FRONTEND=noninteractive
  - export TZ=Europe/Berlin
  - apt-get update && apt-get -y install tzdata
  - apt-get -y install build-essential uuid-dev libgl1-mesa-dev qt6-base-dev libqt6svg6-dev wget sudo udev libcanberra-gtk-module libcanberra-gtk3-module libopencv-dev libgtest-dev gcovr --no-install-recommends libboost-all-dev curl cmake xvfb
  - wget --progress=bar:force:noscroll https://www.ximea.com/downloads/recent/XIMEA_Linux_SP.tgz
  - tar xzf XIMEA_Linux_SP.tgz
  - cd package
  - sed -i '/^[^#]/ s/\(^.*udevadm control --reload.*$\)/#\ \1/' scripts/install_steps
  - ./install
  - cd ..
  - apt-get install -y python3-pip
  - python3 -m pip install --upgrade pip
  - pip3 install setuptools-scm
  - pip3 install scikit-build
  - pip3 install cmake --upgrade
# This is the job to build the project
build:
  stage: build
  script:
    - mkdir cmake-build && cd cmake-build
    - cmake -D OpenCV_DIR=/usr/include/opencv4/opencv2 -D Ximea_Include_Dir=/opt/XIMEA/include -D Ximea_Lib=/usr/lib/libm3api.so.2.0.0 -D ENABLE_COVERAGE=ON ..
    - make all -j
  artifacts:
    paths:
      - cmake-build/
  rules:
      - if: $CI_COMMIT_BRANCH == "develop" || $CI_PIPELINE_SOURCE == "merge_request_event"

test:
  script:
    - cd cmake-build
    - ENV QT_QPA_PLATFORM offscreen
      RUN xvfb-run -a --server-args="-screen 0 1024x768x24" ctest --extra-verbose --output-on-failure --output-junit Testing/Test.xml --schedule-random -T Test --no-compress-output
    - gcovr --xml-pretty --print-summary -o coverage.xml --verbose -e '/.*cmake-build.*/.*' --root ${CI_PROJECT_DIR}
    - mv Testing/Test.xml ../report.xml
    - mv coverage.xml ../coverage.xml
  coverage: /^\s*lines:\s*\d+.\d+\%/
  artifacts:
    when: always
    reports:
      junit: report.xml
      coverage_report:
        coverage_format: cobertura
        path: coverage.xml
  rules:
      - if: $CI_COMMIT_BRANCH == "develop" || $CI_PIPELINE_SOURCE == "merge_request_event"